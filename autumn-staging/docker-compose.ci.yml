services:

  valkey:
    image: docker.io/bitnami/valkey:8.0
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - VALKEY_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    volumes:
      - valkey-data:/bitnami/valkey/data
    healthcheck:
      test: ['CMD', 'redis-cli', '-h', 'localhost', '-p', '6379', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"
    restart: unless-stopped

  shared:
    build:
      dockerfile: docker/dev.dockerfile
      context: .
      target: shared
    volumes:
      - ./shared:/app/shared
      - shared-dist:/app/shared/dist
      - shared-node-modules:/app/shared/node_modules
      - root-node-modules:/app/node_modules
    environment:
      - NODE_ENV=development
    restart: unless-stopped

  # Vite frontend
  vite:
    build:
      dockerfile: docker/dev.dockerfile
      context: .
      target: vite
    ports:
      - "3000:3000"
    volumes:
      - ./vite:/app/vite
      - shared-dist:/app/shared/dist
      - vite-node-modules:/app/vite/node_modules
      - root-node-modules:/app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      - shared
    restart: unless-stopped

  # Main Express server
  server:
    build:
      dockerfile: docker/dev.dockerfile
      context: .
      target: server
    ports:
      - "8080:8080"
    volumes:
      - ./server:/app/server
      - shared-dist:/app/shared/dist
      - server-node-modules:/app/server/node_modules
      - root-node-modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://valkey:6379
      - DATABASE_URL=${DATABASE_URL}
      - ENCRYPTION_IV=${ENCRYPTION_IV}
      - ENCRYPTION_PASSWORD=${ENCRYPTION_PASSWORD}
      - TESTS_ORG=${TESTS_ORG}
      - TESTS_ORG_ID=${TESTS_ORG_ID}
      - LOCALTUNNEL_RESERVED_KEY=${LOCALTUNNEL_RESERVED_KEY}
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - BETTER_AUTH_URL=http://localhost:8080
      - STRIPE_WEBHOOK_URL=${STRIPE_WEBHOOK_URL}
      - HYPERBROWSER_API_KEY=${HYPERBROWSER_API_KEY}
    depends_on:
      - shared
    restart: unless-stopped

  # BullMQ Workers
  workers:
    build:
      dockerfile: docker/dev.dockerfile
      context: .
      target: workers
    volumes:
      # Mount server source for hot reload (workers use server code)
      - ./server:/app/server
      - shared-dist:/app/shared/dist
      - server-node-modules:/app/server/node_modules
      - root-node-modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://valkey:6379
    depends_on:
      - shared
    restart: unless-stopped


  # Run localtunnel
  localtunnel:
    build:
      dockerfile: docker/dev.dockerfile
      context: .
      target: localtunnel
    volumes:
      - ./server:/app/server
    environment:
      - LOCALTUNNEL_RESERVED_KEY=${LOCALTUNNEL_RESERVED_KEY}
    depends_on:
      - server
    restart: unless-stopped


volumes:
  # Shared package dist output
  shared-dist:
  valkey-data:

  # Node modules volumes to avoid host/container conflicts
  shared-node-modules:
  server-node-modules:
  vite-node-modules:
  root-node-modules: